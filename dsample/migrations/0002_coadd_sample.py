# Generated by Django 4.2.13 on 2024-07-01 03:36

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dchem', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('apputil', '0004_alter_applicationuser_options'),
        ('dsample', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='COADD_Sample',
            fields=[
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('sample_id', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Sample ID')),
                ('sample_code', models.CharField(blank=True, max_length=15, verbose_name='Sample Code')),
                ('sample_name', models.CharField(blank=True, max_length=50, verbose_name='Sample Name')),
                ('sample_desc', models.CharField(blank=True, max_length=512, verbose_name='Sample Name')),
                ('old_compound_id', models.CharField(max_length=15, unique=True, verbose_name='Compound ID')),
                ('previous_ids', models.CharField(blank=True, max_length=100, verbose_name='Previous IDs')),
                ('parent_structure_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=15, null=True), blank=True, null=True, size=4, verbose_name='Panel')),
                ('project_id', models.CharField(blank=True, max_length=15, verbose_name='Project ID')),
                ('reg_smiles', models.CharField(blank=True, max_length=2048, verbose_name='Reg Smiles')),
                ('reg_mw', models.FloatField(blank=True, default=0, verbose_name='Reg MW')),
                ('reg_mf', models.CharField(blank=True, max_length=100, verbose_name='Reg MF')),
                ('reg_structure', models.CharField(blank=True, max_length=2048, verbose_name='Reg Structure')),
                ('reg_amount', models.FloatField(blank=True, default=0, verbose_name='Reg Amount')),
                ('reg_amount_unit', models.CharField(blank=True, max_length=100, verbose_name='Reg Amount Unit')),
                ('reg_volume', models.FloatField(blank=True, default=0, verbose_name='Reg Volume')),
                ('reg_volume_unit', models.CharField(blank=True, max_length=100, verbose_name='Reg Volume Unit')),
                ('reg_conc', models.FloatField(blank=True, default=0, verbose_name='Reg Conc')),
                ('reg_conc_unit', models.CharField(blank=True, max_length=100, verbose_name='Reg Conc Unit')),
                ('reg_solvent', models.FloatField(blank=True, default=0, verbose_name='Reg Solvent')),
                ('prep_date', models.DateField(editable=False, verbose_name='Prepared')),
                ('stock_amount', models.FloatField(blank=True, default=0, verbose_name='Stock Amount')),
                ('stock_amount_unit', models.CharField(blank=True, max_length=100, verbose_name='Stock Amount Unit')),
                ('cpoz_sn', models.CharField(blank=True, max_length=25, verbose_name='CpOz SN')),
                ('cpoz_id', models.CharField(blank=True, max_length=25, verbose_name='CpOz Lib ID')),
                ('coadd_id', models.CharField(blank=True, max_length=25, verbose_name='CO-ADD ID')),
                ('chembl_id', models.CharField(blank=True, max_length=25, verbose_name='ChEMBL ID')),
                ('spark_id', models.CharField(blank=True, max_length=25, verbose_name='SPARK ID')),
                ('salt_code', models.CharField(blank=True, max_length=120, verbose_name='Salts')),
                ('full_mw', models.FloatField(blank=True, default=0, verbose_name='Full MW')),
                ('full_mf', models.CharField(blank=True, max_length=100, verbose_name='Full MF')),
                ('std_status', models.CharField(blank=True, max_length=10, verbose_name='Std Status')),
                ('std_action', models.CharField(blank=True, max_length=120, verbose_name='Std Action')),
                ('std_process', models.CharField(blank=True, max_length=120, verbose_name='Std Process')),
                ('std_smiles', models.CharField(blank=True, max_length=2048, verbose_name='Std Smiles')),
                ('pub_status', models.CharField(blank=True, max_length=10, verbose_name='Pub Status')),
                ('pub_date', models.DateField(editable=False, verbose_name='Published')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('sample_type', models.ForeignKey(blank=True, db_column='sample_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_sampletype', to='apputil.dictionary', verbose_name='Sample Type')),
                ('structure_id', models.ForeignKey(blank=True, db_column='structure_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_structureid', to='dchem.chem_structure', verbose_name='Structure ID')),
            ],
            options={
                'db_table': 'coadd_sample',
                'ordering': ['sample_id'],
                'indexes': [models.Index(fields=['sample_name'], name='coadd_name_idx'), models.Index(fields=['sample_code'], name='coadd_code_idx'), models.Index(fields=['sample_type'], name='coadd_type_idx'), models.Index(fields=['reg_mw'], name='coadd_rmw_idx'), models.Index(fields=['salt_code'], name='coadd_salt_idx'), models.Index(fields=['old_compound_id'], name='coadd_ocid_idx')],
            },
        ),
    ]
