#
# Deploy new version of adjCOADD from github 
#  currently applicable to imb-coadd-work
#

#------------------------------------------------------
# login as django linux user
>sudo su - django

#------------------------------------------------------
# change to django delpoyment folder
(base)>cd /opt/django

#------------------------------------------------------
# use bash script update_application.sh to deploy automatically
(base)>./etc/update_app.sh <version number (e.g, 10 )>

#-OR-------------------------------------------------------
#following the rest steps 1.-5. :
# 1. stop django server (gunicorn application server)
#  nginx (http server can keep-on running)
(base)>./etc/dj_stop.sh

#------------------------------------------------------
# 2. archive current project
(base)>cd project
(base)>tar czf 00_Archive/adjCOADD_v<version_number>_<date of archiving>.tgz adjCOADD
       example: tar czf 00_Archive/adjCOADD_v02_20230108.tgz adjCOADD
(base)>mv adjCOADD adjCOADD_v02_20230108 # or rm -rf adjCOADD

(base)>tar czf 00_Archive/static_v<version_number>_<date of archiving>.tgz static
       example: tar czf 00_Archive/static_v02_20230108.tgz static
(base)>mv static static_v02_20230108 # or rm -rf static

#------------------------------------------------------
# 3. Create new project file
(base)>git clone https://github.com/CO-ADD/adjCOADD
Usually development branch 

#------------------------------------------------------
# 4. Collect static and create uploads folder 
(base)>cd adjCOADD
(base)>edit adjCOADD/setting.py 
       DEVELOPMENT=None
       VERSION = '1.?.?'
       
(base)>conda activate dj42py311
(dj41py310)>mkdir applog
(dj41py310)>python manage.py collectstatic
(dj41py310)>cd ..
(dj41py310)>mkdir static/images/mol
(dj41py310)>chmod 775 -R static
(dj41py310)>cd ..


#------------------------------------------------------
# 5. Apply database migrations 
In case the Migration is for new schema:
pgAdmin> create new schema 

Cleanup Migration in <app>/migrations
rm <either all or only the new part> 
dbeaver> check apputil.django_migration and remove any entry which not yet been applied

(dj41py310)> python manage.py makemigrations <app> 
(dj41py310)> python manage.py migrate <app> --database <app>

(dj41py310)> python manage.py makemigrations 
If any changes listed:
(dj41py310)> python manage.py migrate

#------------------------------------------------------
# 6. start django server (gunicorn application server)
(base)>./etc/dj_start.sh

#------------------------------------------------------
# 7.check running instance
(base)>more var/log/gunicorn_error.log
(base)>curl localhost:8009 # gunicorn reply
(base)>curl localhost:8008 # nginx reply

#------------------------------------------------------
# 8.pull request development->main

#------------------------------------------------------
# Backup 
(base)> exit
[uqjzuegg]> cd /opt/django/var/backup
[uqjzuegg]> cp *.tgz ~/Code\Python\Django\99_Backup

