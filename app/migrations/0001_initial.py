# Generated by Django 4.1.1 on 2022-10-25 12:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(max_length=50, unique=True)),
                ('title_name', models.CharField(blank=True, max_length=15)),
                ('short_name', models.CharField(blank=True, max_length=55)),
                ('initials', models.CharField(blank=True, max_length=5)),
                ('organisation', models.CharField(blank=True, max_length=250)),
                ('department', models.CharField(blank=True, max_length=250)),
                ('group', models.CharField(blank=True, max_length=50)),
                ('phone', models.CharField(blank=True, max_length=25)),
                ('permissions', models.CharField(blank=True, max_length=250)),
                ('session_id', models.CharField(blank=True, max_length=250)),
                ('is_appuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'applicationuser',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dictionaries',
            fields=[
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Deleted at')),
                ('Dictionary_Class', models.CharField(max_length=30, verbose_name='Dictionary_Class')),
                ('Dict_Value', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True, verbose_name='Value')),
                ('Dict_Desc', models.CharField(blank=True, max_length=120, null=True, verbose_name='Description')),
                ('acreated_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_requests_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_requests_deleted', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_requests_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_code', models.CharField(blank=True, editable=False, max_length=15)),
                ('log_proc', models.CharField(blank=True, editable=False, max_length=50)),
                ('log_type', models.CharField(blank=True, editable=False, max_length=15)),
                ('log_time', models.DateTimeField(auto_now=True)),
                ('log_object', models.CharField(blank=True, editable=False, max_length=15)),
                ('log_desc', models.CharField(blank=True, editable=False, max_length=1024)),
                ('log_status', models.CharField(blank=True, editable=False, max_length=15)),
                ('log_user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
