# Generated by Django 4.2.2 on 2023-07-11 09:22

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ddrug', '0001_initial'),
        ('apputil', '0001_initial'),
        ('dscreen', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='mic_coadd',
            name='run_id',
            field=models.ForeignKey(db_column='run_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_run_id', to='dscreen.screen_run', verbose_name='Run ID'),
        ),
        migrations.AddField(
            model_name='drug',
            name='acreated',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='drug',
            name='adeleted',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by'),
        ),
        migrations.AddField(
            model_name='drug',
            name='aupdated',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='drug',
            name='drug_type',
            field=models.ForeignKey(blank=True, db_column='drug_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drugtype', to='apputil.dictionary', verbose_name='Drug Type'),
        ),
        migrations.AddField(
            model_name='breakpoint',
            name='acreated',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='breakpoint',
            name='adeleted',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by'),
        ),
        migrations.AddField(
            model_name='breakpoint',
            name='aupdated',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='breakpoint',
            name='bp_type',
            field=models.ForeignKey(blank=True, db_column='bp_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_bptype', to='apputil.dictionary', verbose_name='BP Type'),
        ),
        migrations.AddField(
            model_name='breakpoint',
            name='drug_id',
            field=models.ForeignKey(db_column='drug_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drug_id', to='ddrug.drug', verbose_name='Drug ID'),
        ),
        migrations.AddField(
            model_name='breakpoint',
            name='notorg_rank',
            field=models.ForeignKey(blank=True, db_column='notorg_rank', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_notorgtype', to='apputil.dictionary', verbose_name='Not(Rank)'),
        ),
        migrations.AddField(
            model_name='breakpoint',
            name='org_rank',
            field=models.ForeignKey(blank=True, db_column='org_rank', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_orgtype', to='apputil.dictionary', verbose_name='Rank'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['card_barcode'], name='vid_barcode_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['id_organism'], name='vid_idorg_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['id_probability'], name='vid_idprob_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['id_confidence'], name='vid_idconf_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['filename'], name='vid_fname_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['card_type'], name='vcard_ctype_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['card_code'], name='vcard_ccode_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['card_barcode'], name='vcard_bcode_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['orgbatch_id'], name='vcard_orgbatch_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['drug_id'], name='vast_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['mic'], name='vast_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['bp_profile'], name='vast_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['bp_source'], name='vast_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['filename'], name='vast_fname_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['organism'], name='vast_orgname_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['drug_id'], name='micp_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['mic'], name='micp_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['bp_profile'], name='micp_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['bp_source'], name='micp_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['source'], name='micp_source_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['drug_id'], name='micc_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['mic'], name='micc_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['bp_profile'], name='micc_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['bp_source'], name='micc_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['plate_size'], name='micc_size_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['plate_material'], name='micc_material_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['media'], name='micc_media_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=models.Index(fields=['drug_name'], name='drug_dname_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=django.contrib.postgres.indexes.GistIndex(fields=['smol'], name='drug_smol_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=django.contrib.postgres.indexes.GistIndex(fields=['ffp2'], name='drug_ffp2_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=django.contrib.postgres.indexes.GistIndex(fields=['mfp2'], name='drug_mfp2_idx'),
        ),
        migrations.AddIndex(
            model_name='breakpoint',
            index=models.Index(fields=['drug_id'], name='bp_drug_idx'),
        ),
        migrations.AddIndex(
            model_name='breakpoint',
            index=models.Index(fields=['org_name'], name='bp_org_idx'),
        ),
        migrations.AddIndex(
            model_name='breakpoint',
            index=models.Index(fields=['notorg_rank'], name='bp_nrnk_idx'),
        ),
        migrations.AddIndex(
            model_name='breakpoint',
            index=models.Index(fields=['notorg_name'], name='bp_norg_idx'),
        ),
        migrations.AddIndex(
            model_name='breakpoint',
            index=models.Index(fields=['org_rank'], name='bp_ornk_idx'),
        ),
        migrations.AddIndex(
            model_name='breakpoint',
            index=models.Index(fields=['bp_source'], name='bp_src_idx'),
        ),
        migrations.AddIndex(
            model_name='breakpoint',
            index=models.Index(fields=['bp_type'], name='bp_btyp_idx'),
        ),
    ]
