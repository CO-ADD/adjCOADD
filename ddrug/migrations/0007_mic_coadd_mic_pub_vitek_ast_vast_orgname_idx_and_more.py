# Generated by Django 4.1.5 on 2023-04-11 23:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dorganism', '0012_remove_organism_batch_orgbatch_supp_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('apputil', '0009_alter_applicationlog_options_dictionary_dict_sort_and_more'),
        ('ddrug', '0006_drug_mfp2_drug_torsionbv_drug_drug_mfp2_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='MIC_COADD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('mic', models.CharField(blank=True, max_length=50, verbose_name='MIC')),
                ('mic_unit', models.CharField(blank=True, max_length=20, verbose_name='Unit')),
                ('bp_profile', models.CharField(blank=True, max_length=5, verbose_name='Break Point')),
                ('bp_source', models.CharField(blank=True, max_length=20, verbose_name='Source')),
                ('run_id', models.CharField(blank=True, max_length=25, verbose_name='RunID')),
                ('testplate_id', models.CharField(blank=True, max_length=25, verbose_name='PlateID')),
                ('testwell_id', models.CharField(blank=True, max_length=5, verbose_name='WellID')),
                ('media', models.CharField(blank=True, max_length=40, verbose_name='Media')),
                ('dye', models.CharField(blank=True, max_length=40, verbose_name='Dye')),
            ],
            options={
                'db_table': 'mic_coadd',
                'ordering': ['drug_id', 'orgbatch_id'],
            },
        ),
        migrations.CreateModel(
            name='MIC_Pub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('mic', models.CharField(blank=True, max_length=50, verbose_name='MIC')),
                ('mic_unit', models.CharField(blank=True, max_length=20, verbose_name='Unit')),
                ('source', models.CharField(blank=True, max_length=250, verbose_name='Source')),
                ('bp_profile', models.CharField(blank=True, max_length=5, verbose_name='Break Point')),
                ('bp_source', models.CharField(blank=True, max_length=20, verbose_name='Source')),
            ],
            options={
                'db_table': 'mic_pub',
                'ordering': ['drug_id', 'organism_id'],
            },
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['organism'], name='vast_orgname_idx'),
        ),
        migrations.AddField(
            model_name='mic_pub',
            name='acreated',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='mic_pub',
            name='adeleted',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by'),
        ),
        migrations.AddField(
            model_name='mic_pub',
            name='aupdated',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='mic_pub',
            name='drug_id',
            field=models.ForeignKey(db_column='drug_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drug_id+', to='ddrug.drug', verbose_name='Drug ID'),
        ),
        migrations.AddField(
            model_name='mic_pub',
            name='mic_type',
            field=models.ForeignKey(blank=True, db_column='mic_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_MICType+', to='apputil.dictionary', verbose_name='MIC Type'),
        ),
        migrations.AddField(
            model_name='mic_pub',
            name='organism_id',
            field=models.ForeignKey(db_column='oragnism_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_organism_id+', to='dorganism.organism', verbose_name='Organism ID'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='acreated',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='adeleted',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='aupdated',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='drug_id',
            field=models.ForeignKey(db_column='drug_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drug_id+', to='ddrug.drug', verbose_name='Drug ID'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='mic_type',
            field=models.ForeignKey(blank=True, db_column='mic_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_MICType+', to='apputil.dictionary', verbose_name='MIC Type'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='orgbatch_id',
            field=models.ForeignKey(db_column='orgbatch_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_orgbatch_id+', to='dorganism.organism_batch', verbose_name='OrgBatch ID'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='plate_material',
            field=models.ForeignKey(blank=True, db_column='plate_material', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_PlateMaterial+', to='apputil.dictionary', verbose_name='Plate Material'),
        ),
        migrations.AddField(
            model_name='mic_coadd',
            name='plate_size',
            field=models.ForeignKey(blank=True, db_column='plate_size', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_PlateSize+', to='apputil.dictionary', verbose_name='Plate Size'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['drug_id'], name='micp_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['mic'], name='micp_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['bp_profile'], name='micp_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['bp_source'], name='micp_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['source'], name='micp_source_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['drug_id'], name='micc_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['mic'], name='micc_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['bp_profile'], name='micc_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['bp_source'], name='micc_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['plate_size'], name='micc_size_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['plate_material'], name='micc_material_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['media'], name='micc_media_idx'),
        ),
    ]
