# Generated by Django 4.1.3 on 2023-05-15 04:36

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django_rdkit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('apputil', '0001_initial'),
        ('dorganism', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('drug_id', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='Drug ID')),
                ('drug_name', models.CharField(max_length=50, unique=True, verbose_name='Drug Name')),
                ('drug_othernames', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=60), null=True, size=30)),
                ('drug_codes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), null=True, size=30)),
                ('drug_note', models.CharField(blank=True, max_length=50, verbose_name='Drug Notes')),
                ('drug_panel', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20, null=True), blank=True, null=True, size=20, verbose_name='Panel')),
                ('drug_target', models.CharField(blank=True, max_length=50, verbose_name='Target')),
                ('drug_subtarget', models.CharField(blank=True, max_length=50, verbose_name='SubTarget')),
                ('moa', models.CharField(blank=True, max_length=50, verbose_name='MoA')),
                ('drug_class', models.CharField(blank=True, max_length=50, verbose_name='Class')),
                ('drug_subclass', models.CharField(blank=True, max_length=50, verbose_name='SubClass')),
                ('antimicro', models.CharField(blank=True, max_length=25, verbose_name='Antimicro')),
                ('antimicro_class', models.CharField(blank=True, max_length=80, verbose_name='Antimicro Type')),
                ('max_phase', models.CharField(blank=True, default='0', max_length=2, verbose_name='max Approval')),
                ('approval_note', models.CharField(blank=True, max_length=50, verbose_name='Approval Note')),
                ('admin_routes', models.CharField(blank=True, max_length=50, verbose_name='Administrations')),
                ('application', models.CharField(blank=True, max_length=50, verbose_name='Application')),
                ('n_compounds', models.IntegerField(blank=True, default=0, verbose_name='#Cmpds')),
                ('chembl', models.CharField(blank=True, max_length=15, verbose_name='ChEMBL')),
                ('drugbank', models.CharField(blank=True, max_length=10, verbose_name='DrugBank')),
                ('cas', models.CharField(blank=True, max_length=15, verbose_name='CAS')),
                ('pubchem', models.CharField(blank=True, max_length=15, verbose_name='PubChem')),
                ('chemspider', models.CharField(blank=True, max_length=15, verbose_name='ChemSpider')),
                ('unii', models.CharField(blank=True, max_length=12, verbose_name='UNII')),
                ('kegg', models.CharField(blank=True, max_length=10, verbose_name='KEGG')),
                ('comptox', models.CharField(blank=True, max_length=20, verbose_name='CompTox')),
                ('echa', models.CharField(blank=True, max_length=15, verbose_name='ECHA')),
                ('chebi', models.CharField(blank=True, max_length=15, verbose_name='ChEBI')),
                ('uq_imb', models.CharField(blank=True, max_length=15, verbose_name='IMB')),
                ('vendor', models.CharField(blank=True, max_length=15, verbose_name='Vendor')),
                ('vendor_catno', models.CharField(blank=True, max_length=15, verbose_name='CatNo')),
                ('mw', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, verbose_name='MW')),
                ('mf', models.CharField(blank=True, max_length=25, verbose_name='MF')),
                ('smiles', models.CharField(blank=True, max_length=2048, verbose_name='SMILES')),
                ('smol', django_rdkit.models.fields.MolField(blank=True, null=True, verbose_name='MOL')),
                ('torsionbv', django_rdkit.models.fields.BfpField(null=True)),
                ('ffp2', django_rdkit.models.fields.BfpField(null=True, verbose_name='FFP2')),
                ('mfp2', django_rdkit.models.fields.BfpField(null=True, verbose_name='MFP2')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('drug_type', models.ForeignKey(blank=True, db_column='drug_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drugtype', to='apputil.dictionary', verbose_name='Drug Type')),
            ],
            options={
                'db_table': 'drug',
                'ordering': ['drug_name'],
            },
        ),
        migrations.CreateModel(
            name='VITEK_Card',
            fields=[
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('card_barcode', models.CharField(max_length=25, primary_key=True, serialize=False, verbose_name='Card Barcode')),
                ('card_code', models.CharField(max_length=15, verbose_name='Card Code')),
                ('expiry_date', models.DateField(blank=True, verbose_name='Expiry Date')),
                ('instrument', models.CharField(blank=True, max_length=50, verbose_name='Vitek SN')),
                ('proc_date', models.DateField(verbose_name='Processing Date')),
                ('analysis_time', models.CharField(blank=True, max_length=15, verbose_name='Analysis Time')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('card_type', models.ForeignKey(blank=True, db_column='card_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_cardtype', to='apputil.dictionary', verbose_name='Card Type')),
                ('orgbatch_id', models.ForeignKey(db_column='orgbatch_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_orgbatch_id', to='dorganism.organism_batch', verbose_name='OrgBatch ID')),
            ],
            options={
                'db_table': 'vitek_card',
                'ordering': ['card_type', 'card_code', 'card_barcode'],
            },
        ),
        migrations.CreateModel(
            name='VITEK_ID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('process', models.CharField(blank=True, max_length=50, verbose_name='Vitek Process')),
                ('id_organism', models.CharField(blank=True, max_length=120, verbose_name='ID Organism')),
                ('id_probability', models.CharField(blank=True, max_length=120, verbose_name='ID Probability')),
                ('id_confidence', models.CharField(blank=True, max_length=120, verbose_name='ID Confidence')),
                ('id_source', models.CharField(blank=True, max_length=20, verbose_name='Source')),
                ('filename', models.CharField(blank=True, max_length=120, verbose_name='PDF Filename')),
                ('page_no', models.IntegerField(blank=True, default=0, verbose_name='PDF PageNo')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('card_barcode', models.ForeignKey(db_column='card_barcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_card_barcode', to='ddrug.vitek_card', verbose_name='Card Barcode')),
            ],
            options={
                'db_table': 'vitek_id',
            },
        ),
        migrations.CreateModel(
            name='VITEK_AST',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('mic', models.CharField(blank=True, max_length=50, verbose_name='MIC')),
                ('process', models.CharField(blank=True, max_length=50, verbose_name='Vitek Process')),
                ('bp_profile', models.CharField(blank=True, max_length=5, verbose_name='Break Point')),
                ('bp_comment', models.CharField(blank=True, max_length=120, verbose_name='Comment')),
                ('bp_source', models.CharField(blank=True, max_length=20, verbose_name='Source')),
                ('selection', models.CharField(blank=True, max_length=20, verbose_name='Selection')),
                ('organism', models.CharField(blank=True, max_length=120, verbose_name='Organism')),
                ('filename', models.CharField(blank=True, max_length=120, verbose_name='PDF Filename')),
                ('page_no', models.IntegerField(blank=True, default=0, verbose_name='PDF PageNo')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('card_barcode', models.ForeignKey(db_column='card_barcode', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_card_barcode', to='ddrug.vitek_card', verbose_name='Card Barcode')),
                ('drug_id', models.ForeignKey(db_column='drug_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drug_id', to='ddrug.drug', verbose_name='Drug ID')),
            ],
            options={
                'db_table': 'vitek_ast',
                'ordering': ['drug_id', 'bp_source', 'card_barcode'],
            },
        ),
        migrations.CreateModel(
            name='MIC_Pub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('mic', models.CharField(blank=True, max_length=50, verbose_name='MIC')),
                ('mic_unit', models.CharField(blank=True, max_length=20, verbose_name='Unit')),
                ('zone_diameter', models.CharField(blank=True, max_length=20, verbose_name='Zone Diameter')),
                ('source', models.CharField(blank=True, max_length=250, verbose_name='Source')),
                ('bp_profile', models.CharField(blank=True, max_length=5, verbose_name='Break Point')),
                ('bp_source', models.CharField(blank=True, max_length=20, verbose_name='Source')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('drug_id', models.ForeignKey(db_column='drug_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drug_id', to='ddrug.drug', verbose_name='Drug ID')),
                ('mic_type', models.ForeignKey(blank=True, db_column='mic_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_mictype', to='apputil.dictionary', verbose_name='MIC Type')),
                ('organism_id', models.ForeignKey(db_column='oragnism_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_organism_id', to='dorganism.organism', verbose_name='Organism ID')),
            ],
            options={
                'db_table': 'mic_pub',
                'ordering': ['drug_id', 'organism_id'],
            },
        ),
        migrations.CreateModel(
            name='MIC_COADD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('mic', models.CharField(blank=True, max_length=50, verbose_name='MIC')),
                ('mic_unit', models.CharField(blank=True, max_length=20, verbose_name='Unit')),
                ('bp_profile', models.CharField(blank=True, max_length=5, verbose_name='Break Point')),
                ('bp_source', models.CharField(blank=True, max_length=20, verbose_name='Source')),
                ('run_id', models.CharField(blank=True, max_length=25, verbose_name='RunID')),
                ('testplate_id', models.CharField(blank=True, max_length=25, verbose_name='PlateID')),
                ('testwell_id', models.CharField(blank=True, max_length=5, verbose_name='WellID')),
                ('media', models.CharField(blank=True, max_length=40, verbose_name='Media')),
                ('dye', models.CharField(blank=True, max_length=40, verbose_name='Dye')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('drug_id', models.ForeignKey(db_column='drug_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_drug_id', to='ddrug.drug', verbose_name='Drug ID')),
                ('mic_type', models.ForeignKey(blank=True, db_column='mic_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_mictype', to='apputil.dictionary', verbose_name='MIC Type')),
                ('orgbatch_id', models.ForeignKey(db_column='orgbatch_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_orgbatch_id', to='dorganism.organism_batch', verbose_name='OrgBatch ID')),
                ('plate_material', models.ForeignKey(blank=True, db_column='plate_material', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_material', to='apputil.dictionary', verbose_name='Plate Material')),
                ('plate_size', models.ForeignKey(blank=True, db_column='plate_size', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_platesize', to='apputil.dictionary', verbose_name='Plate Size')),
            ],
            options={
                'db_table': 'mic_coadd',
                'ordering': ['drug_id', 'orgbatch_id'],
            },
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['card_barcode'], name='vid_barcode_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['id_organism'], name='vid_idorg_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['id_probability'], name='vid_idprob_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['id_confidence'], name='vid_idconf_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_id',
            index=models.Index(fields=['filename'], name='vid_fname_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['card_type'], name='vcard_ctype_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['card_code'], name='vcard_ccode_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['card_barcode'], name='vcard_bcode_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_card',
            index=models.Index(fields=['orgbatch_id'], name='vcard_orgbatch_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['drug_id'], name='vast_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['mic'], name='vast_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['bp_profile'], name='vast_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['bp_source'], name='vast_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['filename'], name='vast_fname_idx'),
        ),
        migrations.AddIndex(
            model_name='vitek_ast',
            index=models.Index(fields=['organism'], name='vast_orgname_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['drug_id'], name='micp_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['mic'], name='micp_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['bp_profile'], name='micp_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['bp_source'], name='micp_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_pub',
            index=models.Index(fields=['source'], name='micp_source_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['drug_id'], name='micc_drugid_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['mic'], name='micc_mic_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['bp_profile'], name='micc_bprofile_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['bp_source'], name='micc_bpsource_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['plate_size'], name='micc_size_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['plate_material'], name='micc_material_idx'),
        ),
        migrations.AddIndex(
            model_name='mic_coadd',
            index=models.Index(fields=['media'], name='micc_media_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=models.Index(fields=['drug_name'], name='drug_dname_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=django.contrib.postgres.indexes.GistIndex(fields=['smol'], name='drug_smol_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=django.contrib.postgres.indexes.GistIndex(fields=['ffp2'], name='drug_ffp2_idx'),
        ),
        migrations.AddIndex(
            model_name='drug',
            index=django.contrib.postgres.indexes.GistIndex(fields=['mfp2'], name='drug_mfp2_idx'),
        ),
    ]
