# Generated by Django 4.1.3 on 2023-05-15 04:32

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=55, unique=True, verbose_name='uq user')),
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='user name')),
                ('initials', models.CharField(blank=True, max_length=5, null=True)),
                ('organisation', models.CharField(blank=True, max_length=250, null=True)),
                ('department', models.CharField(blank=True, max_length=250, null=True)),
                ('group', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=25, null=True)),
                ('permission', models.CharField(default='No', max_length=10)),
                ('is_appuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'app_user',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('astatus', models.IntegerField(db_index=True, default=0, editable=False, verbose_name='Status')),
                ('acreated_at', models.DateTimeField(editable=False, verbose_name='Created at')),
                ('aupdated_at', models.DateTimeField(editable=False, null=True, verbose_name='Updated at')),
                ('adeleted_at', models.DateTimeField(editable=False, null=True, verbose_name='Deleted at')),
                ('dict_value', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True, verbose_name='Value')),
                ('dict_class', models.CharField(max_length=30, verbose_name='Class')),
                ('dict_desc', models.CharField(blank=True, max_length=140, verbose_name='Description')),
                ('dict_sort', models.IntegerField(default=0, verbose_name='Order')),
                ('acreated', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_acreated_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('adeleted', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_adeleted_by', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('aupdated', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_aupdated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'db_table': 'app_dictionary',
                'ordering': ['dict_class', 'dict_value'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_code', models.CharField(blank=True, db_index=True, editable=False, max_length=15, verbose_name='Log Code')),
                ('log_proc', models.CharField(blank=True, db_index=True, editable=False, max_length=50, verbose_name='Log Procedure')),
                ('log_type', models.CharField(blank=True, db_index=True, editable=False, max_length=15, verbose_name='Log Type')),
                ('log_time', models.DateTimeField(auto_now=True, verbose_name='Log Time')),
                ('log_object', models.CharField(blank=True, db_index=True, editable=False, max_length=15, verbose_name='Log Object')),
                ('log_desc', models.CharField(blank=True, editable=False, max_length=1024, verbose_name='Log Code')),
                ('log_status', models.CharField(blank=True, db_index=True, editable=False, max_length=15, verbose_name='Log Status')),
                ('log_user', models.ForeignKey(blank=True, db_column='log_user', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_user', to=settings.AUTH_USER_MODEL, verbose_name='Log User')),
            ],
            options={
                'db_table': 'app_log',
                'ordering': ['log_time', 'log_type'],
            },
        ),
        migrations.AddIndex(
            model_name='dictionary',
            index=models.Index(fields=['dict_class'], name='dict_class_idx'),
        ),
        migrations.AddIndex(
            model_name='applicationlog',
            index=models.Index(fields=['log_code'], name='log_code_idx'),
        ),
        migrations.AddIndex(
            model_name='applicationlog',
            index=models.Index(fields=['log_proc'], name='log_proc_idx'),
        ),
        migrations.AddIndex(
            model_name='applicationlog',
            index=models.Index(fields=['log_type'], name='log_type_idx'),
        ),
        migrations.AddIndex(
            model_name='applicationlog',
            index=models.Index(fields=['log_object'], name='log_object_idx'),
        ),
    ]
